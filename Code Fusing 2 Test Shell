## This is the test model to add other sections of questions and answers list
#import libraries first
import statistics as s


class Question:
    def __init__(self, prompt, answer):
        self.prompt= prompt
        self.answer= answer

        
## Section 1 - Pharmacology - Questions - This is the section for questions and answers about pharmacology       
questions_prompts1 = [
    "1. What is another name for a Pharmacy?\n\n(a) drug house\n(b) drug store\n(c) drug dealer\n ",
    "2. What is the title of the person who distributes the drugs?\n\n(a) drug dealer\n(b) pharmacist\n(c) candy man\n ",
] 

## Section 1 - Pharmacology - Answers - This questions list is where you will put the correct answers that will be checked for matching the user input        
question_list1 = [
    Question(questions_prompts1[0], "b"),
    Question(questions_prompts1[1], "b"),
]        


## This is the sections where the next set of Dosage Calculation questions and answers go
questions_prompts2 = [
    "1. A patient has an order for Clindamycin 500mg  every 6 hours. How many tablets will the nurse adminster in if the tablets are in 250 mg doses?\n\n(a) 3 tabs\n(b) 2 tabs\n(c) 4 tabs\n(d) 1 tab\n",
    "2. A nurse has to adminster 150mg of a medication.The label of the vial reads '100mg per  mL'. How many mL will the nurse draw?\n\n(a) 1.5mL\n(b) 3.5mL\n(c) 2mL\n(d) 1mL\n",
    "3. A  child is to receive 500mg of an antibiotic. The label on the bottle reads 250mg/5mL. How many mL will the nurse give??\n\n(a) 15mL\n(b) 20mL\n(c) 10mL\n(d) 5mL\n",
    "4. The patient is prescribed 1g daily of Ascorbic Acid. The bottle comes in 250mg tablets. How many tablets will you instruct the patient to take?  \n\n(a) 3 tabs a day\n(b) 2 tabs a day\n(c) 5 tabs a day\n(d) 4 tabs a day\n",
    "5. A nurse is to administer 275mg of a medication IM. The vial is labeled for a concentration of 100mg/mL. What volume of the drug should the nurse administer?\n\n(a) 1.7 mL\n(b) 2mL\n(c) 2.75mL\n(d) 5mL\n",
    "6. You are preparing to administer 80mg of Solu-medrol IV to a patient diagnosed with Pneumonia. The vial is labeled 120mg/2mL. What is the correct amount to adminsiter to the patient?\n\n(a) 1.3 mL\n(b) 3mL\n(c) 1.4mL\n(d) 1.5mL\n",
    "7. The OB Nurse receives an order to administer 25mg of Demerol for a patient in labor. The vial reads 50mg/1mL. How much medication should the nurse draw up?\n\n(a) 1.5 mL\n(b) .2mL\n(c) .8mL\n(d) .5mL\n",
    "8. A post-op patient has been prescribed a one-time dose of 3mg Morphine. The medication comes in ampules of 10mg/mL. What volume should the nurse administer?\n\n(a) 1mL\n(b) .3mL\n(c) .4mL\n(d) .2mL\n",
    "9. There is an order for a patient to recieve 250mg of Acetaminophen PO TID. How many mg will the patient receive in one day?\n\n(a) 500mg\n(b) 600mg\n(c) 1000mg\n(d) 750mg\n",
    "10. The Cardiologist prescribes Gentamicin 5mg/kg a day PO. The patient weighs 154 lbs. How many mg will the patient take a day?\n\n(a) 300mg a day\n(b) 200mg a day\n(c) 280mg a day\n(d) 770mg a day\n ",
]        


## the questions list is where you will put the correct answers that will be checked for matching the user input 
question_list2 = [
    Question(questions_prompts2[0], "b"),
    Question(questions_prompts2[1], "a"),
    Question(questions_prompts2[2], "c"),
    Question(questions_prompts2[3], "d"),
    Question(questions_prompts2[4], "c"),
    Question(questions_prompts2[5], "a"),
    Question(questions_prompts2[6], "d"),
    Question(questions_prompts2[7], "b"),
    Question(questions_prompts2[8], "d"),
    Question(questions_prompts2[9], "c"),
]
        

## This is the section where questions and answers about pharmacology goes        
questions_prompts3 = [
    "1. This is the section for Body Systems\n\n(a) True\n(b) False\n",
    "2. What number comes after 2?\n\n(a) 3\n(b) 4\n(c) 5\n ",
    "3. What is the title of the person who distributes the drugs?\n\n(a) drug dealer\n(b) pharmacist\n(c) candy man\n ",
] 

## the questions list is where you will put the correct answers that will be checked for matching the user input        
question_list3 = [
    Question(questions_prompts3[0], "a"),
    Question(questions_prompts3[1], "a"),
    Question(questions_prompts3[2], "b"),
]      
    
    
    
        
        
questions_prompts4 = [
    "1. What is is the correct meaning for angio?\n\n(a) mouth\n(b) water\n(c) lung\n(d) vessel\n",
    "2. What is the prefix for 'above normal'?\n\n(a) poly\n(b) hypo\n(c) hyper\n(d) mega\n",
    "3. What is the prefix for 'below normal'?\n\n(a) trans\n(b) semi\n(c) hypo\n(d) post\n",
    "4. The suffix 'ectomy' refers to?\n\n(a) condition\n(b) incision\n(c) paralysis\n(d) growth\n",
    "5. 'Skin' is the meaning of what root word?\n\n(a) derm\n(b) oro\n(c) myo\n(d) cyano\n",
    "6. What is the suffix for inflammation?\n\n(a) tomy\n(b) itis\n(c) scope\n(d) osis\n",

]

question_list4 = [
    Question(questions_prompts4[0], "d"),
    Question(questions_prompts4[1], "c"),
    Question(questions_prompts4[2], "c"),
    Question(questions_prompts4[3], "b"),
    Question(questions_prompts4[4], "a"),
    Question(questions_prompts4[5], "b"),
    
]

need_to_reviewlist = []


        
## This function is associated with option 1        
def run_test(question_list1):
    score = 0
    for question in question_list1 :
        print("\n Choose the best answer:\n")
        ans = input(question.prompt + "Enter letter representing the correct answer: a/b/c/d? ")
        if ans.lower() == question.answer:
            print("Correct")
            score += 1
        else:
            print("Wrong")
            need_to_reviewlist.append(question.prompt)
            #need_to_reviewlist.replace(\n)
    print("You got " + str(score) + " out of " + str(len(question_list1))+ " questions right.")
    print ("\nYou need to review the following questions", need_to_reviewlist)
    
## This function is associated with option 2    
def run_test(question_list2):
    score = 0
    for question in question_list2 :
        print("\n Choose the best answer:\n")
        ans = input(question.prompt + "Enter letter representing the correct answer: a/b/c/d? ")
        if ans.lower() == question.answer:
            print("Correct")
            score += 1
        else:
            print("Wrong")
            need_to_reviewlist.append(question.prompt)
            #need_to_reviewlist.replace(\n)
    print("You got " + str(score) + " out of " + str(len(question_list2))+ " questions right.")
    print ("\nYou need to review the following questions", need_to_reviewlist)
    
## This function is associated with option 3    
def run_test(question_list3):
    score = 0
    for question in question_list3 :
        print("\n Choose the best answer:\n")
        ans = input(question.prompt + "Enter letter representing the correct answer: a/b/c/d? ")
        if ans.lower() == question.answer:
            print("Correct")
            score += 1
        else:
            print("Wrong")
            need_to_reviewlist.append(question.prompt)
            #need_to_reviewlist.replace(\n)
    print("You got " + str(score) + " out of " + str(len(question_list3))+ " questions right.")
    print ("\nYou need to review the following questions", need_to_reviewlist)    

    ## This function is associated with option 4
def run_test(question_list4):
    score = 0
    for question in question_list4 :
        print("\n Choose the best answer:\n")
        ans = input(question.prompt + "Enter letter representing the correct answer: a/b/c/d? ")
        if ans.lower() == question.answer:
            print("Correct")
            score += 1
        else:
            print("Wrong")
            need_to_reviewlist.append(question.prompt)
            #need_to_reviewlist.replace(\n)
    print("You got " + str(score) + " out of " + str(len(question_list4))+ " questions right.")
    print ("\nYou need to review the following questions", need_to_reviewlist)
        

#######



def main():
    
    print("""
    The PocketNurse Test Prep

    [1] - Pharmacology Questions
    [2] - Dosage Calculations
    [3] - Basic SKills
    [4] - Anatomy / Body Systems / Medical Terms
    [5] - Exit / Nothing
    """)

    action = input('Welcome to the PocketNurse\n What would you like to test your knowledge on today? (Enter a number )')
    #Here we process their choice of what they want to do.
    if action == '1':
        #print('1 selected')
        run_test(question_list1)
    elif action == '2':
        #print('2 selected')
        run_test(question_list2)
    elif action == '3':
        #print('3 selected')
        run_test(question_list3)
    elif action == '4':
        #print('4 selected')
        run_test(question_list4)
    elif action == '5':
        #print ('5 selected')
        exit()
    else:
        print('Valid option not selected.') #need to cause it to reprompt
main()
